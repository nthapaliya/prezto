#compdef rake

# returns 0 if cache needs rebuilding
_should_rebuild_cache () {
  if [[ $project_root/Rakefile -nt $1 ]]; then
    return 0
  fi

  local -a files
  files=($project_root/lib/tasks/**/*.rake(.))

  # empty list if nothing exists
  for file in $files; do
    if [[ "$file" -nt $1 ]]; then
      return 0
    fi
  done

  return 1
}

_rake () {
  local curcontext="$curcontext"
  zstyle ":completion:${curcontext}:" cache-policy _should_rebuild_cache

  local -a rake_tasks
  local project_root=${"$(git rev-parse --show-toplevel 2> /dev/null)":-$PWD}
  local cachefile="rake_${project_root:gs-/-_}"

  if [[ -f $project_root/Rakefile ]]; then
    if _cache_invalid $cachefile || ! _retrieve_cache $cachefile; then
      echo '...'
      rake_tasks=(${(f)"$( _call_program rake-tasks \
        rake --silent --tasks | sed -nE \
        -e 's/:/\\:/g' \
        -e 's/^rake //' \
        -e 's/[[:space:]]*# /:/p' )"})
      _store_cache $cachefile rake_tasks
    fi
    _describe 'tasks' rake_tasks
  fi
}

_rake
